/*Challenge set by Helen Yu*/

/*Create a function that determines whether elements in an array can be re-arranged to form a consecutive list of numbers where each number appears exactly once.

Examples
cons([5, 1, 4, 3, 2]) ➞ true
// Can be re-arranged to form [1, 2, 3, 4, 5]

cons([5, 1, 4, 3, 2, 8]) ➞ false

cons([5, 6, 7, 8, 9, 9]) ➞ false
// 9 appears twice */

bool cons(std::vector<int> arr)
{
    int size = arr.size();
    std::sort(arr.begin(), arr.end());
    int ans = 0;

    for (int i = 1; i < size; i++)
    {
        if((arr[i - 1] + 1) == arr[i])
        {
            ans++;
        }
    
    }

    if (ans == size-1)
    {
        return true;
    }
    else
    {
        return false;
    }	
}

/*This is a edabit challenge*/
