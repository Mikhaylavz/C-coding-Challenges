/*This was set by Helen Yu*/
/*
Given two words, the letter distance is calculated by taking the absolute value of the difference in character codes and summing up the difference.

If one word is longer than another, add the difference in lengths towards the score.

To illustrate:

letterDistance("house", "fly") = dist("h", "f") + dist("o", "l") + dist("u", "y") + dist(house.length, fly.length)

= |104 - 102| + |111 - 108| + |117 - 121| + |5 - 3|
= 2 + 3 + 4 + 2
= 11
Examples
letterDistance("sharp", "sharq") ➞ 1

letterDistance("abcde", "Abcde") ➞ 32

letterDistance("abcde", "bcdef") ➞ 5
*/

int letterDistance(std::string str1, std::string str2) 
{
	  int n1 = str1.length();
    int n2 = str2.length();
    int num1;
    int num2;
    int take = 0;
    int length = 0;
    if(n1 == n2)
    {
        for (int i = 0; i < n1; i++)
        {
            if (str1[i] != str2[i])
            {
                num1 = int(str1[i]);
                num2 = int(str2[i]);

                if (num1 < num2)
                {
                    take += num2 - num1;

                }
                else
                {
                    take += num1 - num2;
                }
            }
        }
        
    }
    if(n1 > n2)
    {
        for(int i = 0; i < n2; i++)
        {
            if (str1[i] != str2[i])
            {
                num1 = int(str1[i]);
                num2 = int(str2[i]);

                if (num1 < num2)
                {
                    take += num2 - num1;

                }
                else
                {
                    take += num1 - num2;
                }
            }
        }
        take += n1 - n2;
    }
    else if (n1 < n2)
    {
        for (int i = 0; i < n1; i++)
        {
            if (str1[i] != str2[i])
            {
                num1 = int(str1[i]);
                num2 = int(str2[i]);

                if (num1 < num2)
                {
                    take += num2 - num1;

                }
                else
                {
                    take += num1 - num2;
                }
            }
        }
        take += n2 - n1;
    }
	return take;
}

/*This is a edabit challenge*/
